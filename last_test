Mon Sep 16 12:55:03 PDT 2019

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [7,2,6,5,4,8,1,3] -> [2,7,6,5,4,8,1,3] -> [1,8,4,5,6,7,2,3] -> [7,6,5,4,8,1,2,3] -> [4,5,6,7,8,1,2,3] -> [8,7,6,5,4,1,2,3] -> [3,2,1,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 0 ms,
	solver= Astar
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [6,5,2,7,4,8,1,3] -> [2,5,6,7,4,8,1,3] -> [8,4,7,6,5,2,1,3] -> [3,1,2,5,6,7,4,8] -> [7,6,5,2,1,3,4,8] -> [4,3,1,2,5,6,7,8] -> [2,1,3,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 0 ms,
	solver= IterativeDeepeningAstar
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [7,2,6,5,4,8,1,3] -> [4,5,6,2,7,8,1,3] -> [1,8,7,2,6,5,4,3] -> [7,8,1,2,6,5,4,3] -> [2,1,8,7,6,5,4,3] -> [3,4,5,6,7,8,1,2] -> [8,7,6,5,4,3,1,2] -> [2,1,3,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 9.0,
	time= 2 ms,
	solver= PureHeuristicSearch
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [6,5,2,7,4,8,1,3] -> [2,5,6,7,4,8,1,3] -> [8,4,7,6,5,2,1,3] -> [3,1,2,5,6,7,4,8] -> [7,6,5,2,1,3,4,8] -> [4,3,1,2,5,6,7,8] -> [2,1,3,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 6 ms,
	solver= BloomFilterSearch
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [7,2,6,5,4,8,1,3] -> [4,5,6,2,7,8,1,3] -> [1,8,7,2,6,5,4,3] -> [3,4,5,6,2,7,8,1] -> [6,5,4,3,2,7,8,1] -> [2,3,4,5,6,7,8,1] -> [8,7,6,5,4,3,2,1] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 13 ms,
	solver= MeetInTheMiddle
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [7,2,6,5,4,8,1,3] -> [2,7,6,5,4,8,1,3] -> [3,1,8,4,5,6,7,2] -> [8,1,3,4,5,6,7,2] -> [2,7,6,5,4,3,1,8] -> [3,4,5,6,7,2,1,8] -> [7,6,5,4,3,2,1,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 23 ms,
	solver= FractionalMeetInTheMiddle: 0.33
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [7,2,6,5,4,8,1,3] -> [2,7,6,5,4,8,1,3] -> [1,8,4,5,6,7,2,3] -> [7,6,5,4,8,1,2,3] -> [4,5,6,7,8,1,2,3] -> [8,7,6,5,4,1,2,3] -> [3,2,1,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 59 ms,
	solver= Dijkstra
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [3,1,8,4,7,2,6,5] -> [7,4,8,1,3,2,6,5] -> [2,3,1,8,4,7,6,5] -> [3,2,1,8,4,7,6,5] -> [8,1,2,3,4,7,6,5] -> [5,6,7,4,3,2,1,8] -> [7,6,5,4,3,2,1,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 59 ms,
	solver= FractionalMeetInTheMiddle: 0.66
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [3,1,8,4,7,2,6,5] -> [7,4,8,1,3,2,6,5] -> [2,3,1,8,4,7,6,5] -> [3,2,1,8,4,7,6,5] -> [8,1,2,3,4,7,6,5] -> [5,6,7,4,3,2,1,8] -> [7,6,5,4,3,2,1,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 62 ms,
	solver= BreadthFirstSearch
}

Solution{
	solution= [5,6,2,7,4,8,1,3] -> [6,5,2,7,4,8,1,3] -> [2,5,6,7,4,8,1,3] -> [8,4,7,6,5,2,1,3] -> [3,1,2,5,6,7,4,8] -> [7,6,5,2,1,3,4,8] -> [4,3,1,2,5,6,7,8] -> [2,1,3,4,5,6,7,8] -> [1,2,3,4,5,6,7,8],
	cost= 8.0,
	time= 389 ms,
	solver= IterativeDeepeningDepthFirstSearch
}